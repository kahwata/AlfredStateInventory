/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alfredstateinventory.userinterface;

import alfredstateinventory.java.*;
import alfredstateinventory.java.InventoryItem;
import java.awt.*;
import alfredstateinventory.userinterface.*;
import java.time.LocalDate;
import alfredstateinventory.sql.*;
import java.sql.*;
import java.util.ArrayList;
import java.applet.*;
import javax.swing.*;
import javax.imageio.*;
import javax.swing.BorderFactory;
import javax.swing.border.*;
import java.awt.event.*;
import java.util.logging.Level;
import java.util.logging.Logger;



/**
 *
 * @author BHAsus
 */
public class PanelHome extends javax.swing.JPanel {
    private int scrollPanelY = 0;
    public static boolean fieldsSelected[];

   public PanelHome() {
        initComponents();

                 
        if (fieldsSelected != null && fieldsSelected.length == 10) {
            chkItemName.setSelected(fieldsSelected[0]);
            chkItemAvailable.setSelected(fieldsSelected[1]);
            chkLastSeen.setSelected(fieldsSelected[2]);
            chkDateOfPurchase.setSelected(fieldsSelected[3]);
            chkSoftwareDates.setSelected(fieldsSelected[4]);
            chkVersionNumber.setSelected(fieldsSelected[5]);
            chkBuildDate.setSelected(fieldsSelected[6]);
            chkLifeExpectancy.setSelected(fieldsSelected[7]);
            chkLocation.setSelected(fieldsSelected[8]);
            chkItemDescription.setSelected(fieldsSelected[9]);
        } 
        
        setFieldsSelected();
        
        if (!SQLConnection.getAdminAccess()) {
            btnNewItem.setVisible(false);
            btnNewExport.setVisible(false);
            lblExportTitle.setVisible(false);
            lblNewTitle.setVisible(false);
        }
    }
   
     public PanelHome(InventoryItem[] itemAry) {
        initComponents();
                 
        if (fieldsSelected != null && fieldsSelected.length == 10) {
            chkItemName.setSelected(fieldsSelected[0]);
            chkItemAvailable.setSelected(fieldsSelected[1]);
            chkLastSeen.setSelected(fieldsSelected[2]);
            chkDateOfPurchase.setSelected(fieldsSelected[3]);
            chkSoftwareDates.setSelected(fieldsSelected[4]);
            chkVersionNumber.setSelected(fieldsSelected[5]);
            chkBuildDate.setSelected(fieldsSelected[6]);
            chkLifeExpectancy.setSelected(fieldsSelected[7]);
            chkLocation.setSelected(fieldsSelected[8]);
            chkItemDescription.setSelected(fieldsSelected[9]);
        } 
        
        setFieldsSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        imgLogo = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));
        btnRefresh = new javax.swing.JButton();
        btnQuery = new javax.swing.JButton();
        btnNewItem = new javax.swing.JButton();
        btnNewExport = new javax.swing.JButton();
        btnLogOut = new javax.swing.JButton();
        chkItemName = new javax.swing.JCheckBox();
        chkItemAvailable = new javax.swing.JCheckBox();
        chkLastSeen = new javax.swing.JCheckBox();
        chkDateOfPurchase = new javax.swing.JCheckBox();
        chkSoftwareDates = new javax.swing.JCheckBox();
        chkVersionNumber = new javax.swing.JCheckBox();
        chkBuildDate = new javax.swing.JCheckBox();
        chkLifeExpectancy = new javax.swing.JCheckBox();
        chkLocation = new javax.swing.JCheckBox();
        chkItemDescription = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        pnlScrollPanel = new javax.swing.JScrollPane();
        pnlInventory = new javax.swing.JPanel();
        lblExportTitle = new javax.swing.JLabel();
        lblRefreshTitle = new javax.swing.JLabel();
        lblNewTitle = new javax.swing.JLabel();
        lblSearchTitle = new javax.swing.JLabel();
        btnHelpCenter = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        setMaximumSize(new java.awt.Dimension(2147483647, 500));
        setMinimumSize(new java.awt.Dimension(0, 0));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1500, 1000));
        setLayout(new java.awt.GridBagLayout());

        imgLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfredstateinventory/drawable/SmallBanner.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(imgLogo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(filler1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(filler2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        add(filler3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        add(filler4, gridBagConstraints);

        btnRefresh.setBackground(java.awt.SystemColor.control);
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfredstateinventory/drawable/RefreshIcon.png"))); // NOI18N
        btnRefresh.setToolTipText("Refresh List");
        btnRefresh.setBorder(null);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 58);
        add(btnRefresh, gridBagConstraints);

        btnQuery.setBackground(java.awt.SystemColor.control);
        btnQuery.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfredstateinventory/drawable/SearchIcon.png"))); // NOI18N
        btnQuery.setToolTipText("Search items");
        btnQuery.setBorder(null);
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(btnQuery, gridBagConstraints);

        btnNewItem.setBackground(java.awt.SystemColor.control);
        btnNewItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfredstateinventory/drawable/PlusIcon.png"))); // NOI18N
        btnNewItem.setToolTipText("Add new item");
        btnNewItem.setBorder(null);
        btnNewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewItemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 110);
        add(btnNewItem, gridBagConstraints);

        btnNewExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfredstateinventory/drawable/QRIcon.png"))); // NOI18N
        btnNewExport.setToolTipText("Export QR codes of items listed");
        btnNewExport.setBorder(null);
        btnNewExport.setPreferredSize(new java.awt.Dimension(20, 20));
        btnNewExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewExportActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 174);
        add(btnNewExport, gridBagConstraints);

        btnLogOut.setBackground(java.awt.SystemColor.control);
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfredstateinventory/drawable/LogoutIcon.png"))); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.setToolTipText("Log out of the system");
        btnLogOut.setBorder(null);
        btnLogOut.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        add(btnLogOut, gridBagConstraints);

        chkItemName.setSelected(true);
        chkItemName.setText("Item Name");
        chkItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkItemNameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(chkItemName, gridBagConstraints);

        chkItemAvailable.setSelected(true);
        chkItemAvailable.setText("Item Available");
        chkItemAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkItemAvailableActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 125, 0, 25);
        add(chkItemAvailable, gridBagConstraints);

        chkLastSeen.setSelected(true);
        chkLastSeen.setText("Last Seen");
        chkLastSeen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLastSeenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 235, 0, 25);
        add(chkLastSeen, gridBagConstraints);

        chkDateOfPurchase.setText("Date of Purchase");
        chkDateOfPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDateOfPurchaseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 356, 0, 56);
        add(chkDateOfPurchase, gridBagConstraints);

        chkSoftwareDates.setText("Software Dates");
        chkSoftwareDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSoftwareDatesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 485, 1, 54);
        add(chkSoftwareDates, gridBagConstraints);

        chkVersionNumber.setText("Version Number");
        chkVersionNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVersionNumberActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 1);
        add(chkVersionNumber, gridBagConstraints);

        chkBuildDate.setText("Build Date");
        chkBuildDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBuildDateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 126, 0, 16);
        add(chkBuildDate, gridBagConstraints);

        chkLifeExpectancy.setText("Life Expectancy");
        chkLifeExpectancy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLifeExpectancyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 235, 0, 35);
        add(chkLifeExpectancy, gridBagConstraints);

        chkLocation.setSelected(true);
        chkLocation.setText("Location");
        chkLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLocationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 356, 0, 36);
        add(chkLocation, gridBagConstraints);

        chkItemDescription.setText("Description");
        chkItemDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkItemDescriptionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 485, 0, 0);
        add(chkItemDescription, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Select fields to view");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        add(jLabel1, gridBagConstraints);

        pnlScrollPanel.setMaximumSize(new java.awt.Dimension(1350, 750));
        pnlScrollPanel.setMinimumSize(null);
        pnlScrollPanel.setName(""); // NOI18N
        pnlScrollPanel.setPreferredSize(new java.awt.Dimension(1350, 750));

        pnlInventory.setName(""); // NOI18N
        pnlInventory.setLayout(new java.awt.GridBagLayout());
        pnlScrollPanel.setViewportView(pnlInventory);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        add(pnlScrollPanel, gridBagConstraints);

        lblExportTitle.setText("Export QR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 160);
        add(lblExportTitle, gridBagConstraints);

        lblRefreshTitle.setText("Refresh");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 50);
        add(lblRefreshTitle, gridBagConstraints);

        lblNewTitle.setText("New Item");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 100);
        add(lblNewTitle, gridBagConstraints);

        lblSearchTitle.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        add(lblSearchTitle, gridBagConstraints);

        btnHelpCenter.setBackground(java.awt.SystemColor.control);
        btnHelpCenter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alfredstateinventory/drawable/HelpIcon.png"))); // NOI18N
        btnHelpCenter.setText("Help Center");
        btnHelpCenter.setToolTipText("View the help center");
        btnHelpCenter.setBorder(null);
        btnHelpCenter.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnHelpCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpCenterActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        add(btnHelpCenter, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        UserInterface.switchLayout(new Object[]{"PanelHome"});
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryActionPerformed
        UserInterface.switchLayout(new Object[]{"PanelQuery"});
    }//GEN-LAST:event_btnQueryActionPerformed

    private void btnNewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewItemActionPerformed
        UserInterface.switchLayout(new Object[]{"PanelEdit", "", 1});
    }//GEN-LAST:event_btnNewItemActionPerformed

    private void btnNewExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewExportActionPerformed
        ArrayList<InventoryItem> items = Inventory.getInventoryItems();
        String path = QRCodeGenerator.getDirPath();
        
        items.forEach((i) -> {
            try {
                QRCodeGenerator.generateQRCodeImage("" + i.getID(), path);
            } catch (Exception e) {}
        });
    }//GEN-LAST:event_btnNewExportActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        AlfredStateInventory.reInstantiate();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void setFieldsSelected() {
         fieldsSelected = new boolean[] {chkItemName.isSelected(), chkItemAvailable.isSelected(),
                chkLastSeen.isSelected(), chkDateOfPurchase.isSelected(), chkSoftwareDates.isSelected(),
                chkVersionNumber.isSelected(), chkBuildDate.isSelected(), chkLifeExpectancy.isSelected(),
                chkLocation.isSelected(), chkItemDescription.isSelected()};

    }
    
    private void chkItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkItemNameActionPerformed
        setFieldsSelected();
    }//GEN-LAST:event_chkItemNameActionPerformed

    private void chkItemAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkItemAvailableActionPerformed
       setFieldsSelected();
    }//GEN-LAST:event_chkItemAvailableActionPerformed

    private void chkLastSeenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLastSeenActionPerformed
        setFieldsSelected();
    }//GEN-LAST:event_chkLastSeenActionPerformed

    private void chkDateOfPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDateOfPurchaseActionPerformed
        setFieldsSelected();
    }//GEN-LAST:event_chkDateOfPurchaseActionPerformed

    private void chkSoftwareDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSoftwareDatesActionPerformed
       setFieldsSelected();
    }//GEN-LAST:event_chkSoftwareDatesActionPerformed

    private void chkVersionNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVersionNumberActionPerformed
        setFieldsSelected();
    }//GEN-LAST:event_chkVersionNumberActionPerformed

    private void chkBuildDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBuildDateActionPerformed
       setFieldsSelected();
    }//GEN-LAST:event_chkBuildDateActionPerformed

    private void chkLifeExpectancyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLifeExpectancyActionPerformed
        setFieldsSelected();
    }//GEN-LAST:event_chkLifeExpectancyActionPerformed

    private void chkLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLocationActionPerformed
        setFieldsSelected();
    }//GEN-LAST:event_chkLocationActionPerformed

    private void chkItemDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkItemDescriptionActionPerformed
        setFieldsSelected();
    }//GEN-LAST:event_chkItemDescriptionActionPerformed

    private void btnHelpCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpCenterActionPerformed
        UserInterface.switchLayout(new Object[]{"PanelHelpCenter", ""});
    }//GEN-LAST:event_btnHelpCenterActionPerformed

    /**
     * Description: Creates an inventory item view, populates it, and adds it
     * to the scroll view using proper grid bag constraints
     * @param Inventory
     */
    public void populateScrollView(ArrayList<InventoryItem> inventory) {
        for (InventoryItem i: inventory) {
            ViewItemEquipment inventoryItem = new ViewItemEquipment(fieldsSelected);
            inventoryItem.populateItemView(i);
            GridBagConstraints gbc = new GridBagConstraints();
            gbc.gridy = scrollPanelY;
            pnlInventory.add(inventoryItem, gbc);
            scrollPanelY++;
        }
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHelpCenter;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNewExport;
    private javax.swing.JButton btnNewItem;
    private javax.swing.JButton btnQuery;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JCheckBox chkBuildDate;
    private javax.swing.JCheckBox chkDateOfPurchase;
    private javax.swing.JCheckBox chkItemAvailable;
    private javax.swing.JCheckBox chkItemDescription;
    private javax.swing.JCheckBox chkItemName;
    private javax.swing.JCheckBox chkLastSeen;
    private javax.swing.JCheckBox chkLifeExpectancy;
    private javax.swing.JCheckBox chkLocation;
    private javax.swing.JCheckBox chkSoftwareDates;
    private javax.swing.JCheckBox chkVersionNumber;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblExportTitle;
    private javax.swing.JLabel lblNewTitle;
    private javax.swing.JLabel lblRefreshTitle;
    private javax.swing.JLabel lblSearchTitle;
    private javax.swing.JPanel pnlInventory;
    private javax.swing.JScrollPane pnlScrollPanel;
    // End of variables declaration//GEN-END:variables

}
